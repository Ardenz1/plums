generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Topic {
  topic_id      Int            @id @default(autoincrement())
  topic_name    String
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  parent_id     Int?
  topic_details Topic_Detail[]
}

model Topic_Detail {
<<<<<<< HEAD
  topic_detail_id              Int      @id @default(autoincrement())
  topic_detail_title           String
  topic_detail_amount          Int
  topic_detail_created_at      DateTime @default(now())
  topic_detail_updated_at      DateTime @updatedAt

  // Define the many-to-one relationship with Topic
  topic           Topic    @relation(fields: [topic_id], references: [topic_id])
  topic_id        Int

  // Define the one-to-many relationships with Notes, Links, Photos, and Attachments
  notes           Note[]
  links           Link[]
  photos          Photo[]
  attachments     Attachment[]
  
=======
  topic_detail_id         Int          @id @default(autoincrement())
  topic_id                Int
  topic_detail_amount     Int
  topic_detail_created_at DateTime     @default(now())
  topic_detail_title      String
  topic_detail_updated_at DateTime     @updatedAt
  attachments             Attachment[]
  links                   Link[]
  notes                   Note[]
    photos                  Photo[]
  topic                   Topic        @relation(fields: [topic_id], references: [topic_id])
>>>>>>> 388175af63a472049305b5ea3a4398b0743b9164
}

model Note {
  note_id          Int          @id @default(autoincrement())
  note_header      String
  note_description String?
  note_created_at  DateTime     @default(now())
  note_updated_at  DateTime     @updatedAt
  topic_detail_id  Int
  topic_detail     Topic_Detail @relation(fields: [topic_detail_id], references: [topic_detail_id])
}

model Link {
  link_id          Int          @id @default(autoincrement())
  link_header      String
  link_description String?
  link_hyperlink   String
  link_created_at  DateTime     @default(now())
  link_updated_at  DateTime     @updatedAt
  topic_detail_id  Int
  topic_detail     Topic_Detail @relation(fields: [topic_detail_id], references: [topic_detail_id])
}

model Photo {
  photo_id          Int          @id @default(autoincrement())
  photo_header      String
  photo_description String?
  photo_image       Bytes
  photo_created_at  DateTime     @default(now())
  photo_updated_at  DateTime     @updatedAt
  topic_detail_id   Int
  topic_detail      Topic_Detail @relation(fields: [topic_detail_id], references: [topic_detail_id])
}

model Attachment {
  attachment_id          Int          @id @default(autoincrement())
  attachment_header      String
  attachment_description String?
  attachment_link        Bytes
  attachment_created_at  DateTime     @default(now())
  attachment_updated_at  DateTime     @updatedAt
  topic_detail_id        Int
  topic_detail           Topic_Detail @relation(fields: [topic_detail_id], references: [topic_detail_id])
}
